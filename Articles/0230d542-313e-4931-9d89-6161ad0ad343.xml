<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>0230d542-313e-4931-9d89-6161ad0ad343</Id>
    <Library_Id>be5273b1-d682-4361-99d9-6204f2d47eb7</Library_Id>
    <Title>Unchecked Error Condition</Title>
    <Category />
    <Phase>Implementation</Phase>
    <Technology> Any</Technology>
    <Type>Vulnerability</Type>
    <DirectLink>Unchecked Error Condition</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[==Description==

Unchecked error conditions may allow attacks to go unnoticed. Checking error conditions helps the application determine if someone out of the ordinary is happening and log that information. Log information helps administrators determine when an attack is taking place and provides information about the attack. Unchecked error condition flaws may occur in any type of application. To prevent unchecked error conditions, use global exception handlers and log error information. To make sure that all error conditions are checked, verify that global exception handlers are used and error information is logged. 

==Impact==

Unchecked error conditions may result in other, more serious vulnerabilities. An unchecked error condition may not actually give any advantage to the attacker. However, if the application contains a lot of code that may produce unchecked errors, that creates a fertile field for the attacker to look for vulnerabilities. 

==Specific Technologies==

* [[00000000-0000-0000-0000-000000373cc0|ASP.NET Unchecked Error Condition]]
* [[00000000-0000-0000-0000-0000008e7f60|Java Unchecked Error Condition]]]]></Data>
  </Content>
</TeamMentor_Article>