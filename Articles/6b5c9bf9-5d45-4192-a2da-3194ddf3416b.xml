<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>6b5c9bf9-5d45-4192-a2da-3194ddf3416b</Id>
    <Library_Id>be5273b1-d682-4361-99d9-6204f2d47eb7</Library_Id>
    <Title>Information Leak Through Cookies</Title>
    <Category>Session Management</Category>
    <Phase>Implementation</Phase>
    <Technology> Any</Technology>
    <Type>Vulnerability</Type>
    <DirectLink>Information Leak Through Cookies</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[==Description==

Cookies are used by web applications to store data on the browser. Cookies may be marked as persistent and stored for an extended period of time. An attacker may gain access to the drive that stores the cookies and recover the sensitive data from them. The exact impact depends on the nature of the sensitive data in the cookies. This vulnerability applies to web applications that use cookies. To prevent this vulnerability, don't store sensitive data in persistent cookies. To check for this vulnerability, find all code that stores cookies and check what kind of data is stored in the cookies. 

==Impact==

The exact impact of this vulnerability depends on the sensitive data stored in the cookies. Usually this is session data that keeps a user authenticated to an application. In that case, the attacker is able to impersonate the authenticated user. Being able to impersonate an authenticated user allows the attacker to carry out any actions that are available to that user within the application. That might be enough for the attacker or he may use that access to leverage additional vulnerabilities for additional privileges. 

==Specific Technologies==

* [[00000000-0000-0000-0000-000000755956|ASP.NET Information Leak Through Cookies]]
* [[00000000-0000-0000-0000-0000007dc07e|PHP Information Leak Through Cookies]]]]></Data>
  </Content>
</TeamMentor_Article>