<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>c51a76ac-66b8-4e29-b43c-917e44496eb4</Id>
    <Library_Id>be5273b1-d682-4361-99d9-6204f2d47eb7</Library_Id>
    <Title>LDAP Injection</Title>
    <Category />
    <Phase />
    <Technology>C++</Technology>
    <Type />
    <DirectLink>LDAP Injection</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[=Description=
Lightweight Directory Access Protocol (LDAP) is a widely used protocol for accessing directory services. Directories provide a set of attributes about people that are organized in a hierarchical manner. LDAP injection is a technique to exploit applications that use input from users to query an LDAP directory. LDAP injection gives an attacker the potential to view, modify, or remove personal information about anyone in the directory. LDAP injection applies to all applications that use LDAP. 

=Impact=
LDAP injection allows an attacker to access and/or modify restricted data in the LDAP database. The attacker may leverage this vulnerability to view personal user information, to give himself administrative privileges, or to take over another account. Once the attacker has administrative privileges, he usually has full control of the application. 

=Countermeasures=
To prevent LDAP injection:
*Validate all input.
*Use parameterized APIs if they are available. 

=Application Check=
To check for adequate protection against this vulnerability:
*Find all code that queries directories and verify that data included in the queries is sufficiently validated.
*Verify that parameterized APIs are used if they are available.]]></Data>
  </Content>
</TeamMentor_Article>