<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>f9533ffc-6cea-4138-a205-f45bdd729d83</Id>
    <Library_Id>be5273b1-d682-4361-99d9-6204f2d47eb7</Library_Id>
    <Title>Double Encoding</Title>
    <Category />
    <Phase />
    <Technology />
    <Type />
    <DirectLink>Double Encoding</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[=Description=

By doubly encoding input, an attacker may be able to bypass security checks that are only decoded once. The singly decoded input will pass security checks and allow the malicious input to be passed to backend servers where it will be fully decoded and interpreted as input.

=Impact=

This attack is often used in conjunction with XSS or SQL injection to bypass security checks.

By encoding '../' and variants, security checks may be bypassed and later interpreted by the server or file system allowing the attacker to access protected files.

=Countermeasures=

Constrain input: Use vigorous white-list style checking on any user input.

Fully decode: Ensure all input is fully decoded using methods at the backend server before operating on received data.

=Application Check=

]]></Data>
  </Content>
</TeamMentor_Article>