<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-384522435" Content_Hash="1015466804">
  <Metadata>
    <Id>0e1b09a6-ec13-4eb6-b8e6-0a2d5d92d4b4</Id>
    <Id_History>350d9e10-d3d2-4e15-af89-f6ea84c01320,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6204f2d47eb7</Library_Id>
    <Title>Key Bruteforce Attack</Title>
    <Category>Cryptography</Category>
    <Phase>Implementation</Phase>
    <Technology> Any</Technology>
    <Type>Attack</Type>
    <DirectLink>Key Bruteforce Attack</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>1</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies To
  </h1>
  <p>Applications that use any type of encryption.</p>
  <h1>Description</h1>
  <p>In cryptography, keys are used to control the operation of a cipher so that only the correct key can convert the encrypted text to plaintext. Since most ciphers are based on publicly known algorithms, these keys are literally the keys to the castle. In a key brute force attack every possible key is attempted until the correct key is found. Ciphertext is deciphered under different keys until recognizable plaintext is discovered. Longer keys require more work to break using this type of an attack and a long enough key will require more work than is feasible. Thus, the length of the encryption key is important in resisting this type of attack.</p>
  <p>The resources required for a brute force attack scale exponentially as the key size is increased. Therefore, doubling the key size does not double the required number of operations, but rather squares the number of required operations. Some algorithms do not support large key lengths and should be avoided.</p>
  <p>Another factor which may aid an attacker in reducing the amount of time it takes to brute-force a key is the key generation algorithm. If the algorithm is weak or uses guessable seeds, an exhaustive search will be possible on a smaller set of keys (for example: keys generated from words in a dictionary).</p>
  <p>Yet another factor which has previously helped attackers break encryption keys has to do with key information leakage. Faulty protocol implementations have lead to parts of the key being 'leaked' to a 3rd party who is observing the encrypted traffic. One such example is the breaking of the WEP algorithm.&amp;nbsp; If any part of the key is leaked, it will help the attacker brute-force the correct key much more quickly.</p>
  <p>Key Bruteforce Attacks are also used against keys meant for non-cryptographic purposes—for example, software product activation keys or session IDs used in web application authentication. The causes of the problem here are similar—insufficient key length or weak key generation.</p>
  <h1>Impact</h1>
  <ul>
    <li>
      <strong>Elevation of privilege</strong>: An attacker can compromise data intended to be secure without either party in a communication necessarily being aware.</li>
  </ul>
  <h1>Vulnerabilities</h1>
  <ul>
    <li>Use of an inappropriately short key length. </li>
    <li>Use of a weak key generation algorithm. </li>
    <li>Use of an encryption algorithm which does not support large key sizes. </li>
    <li>Using a protocol which undermines the key strength due to information leakage. </li>
    <li>Incorrect use of an algorithm in a way which compromises its strength.</li>
  </ul>
  <h1>Countermeasures</h1>
  <ul>
    <li>
      <strong>Use a strong algorithm</strong>: Many times, the available set of key lengths depends on the algorithm in use. For instance, DES can only use a 56 bit key, rendering it no longer secure enough for most purposes. </li>
    <li>
      <strong>Use a long key length</strong>: The selection of an appropriate key length depends on the practical feasibility of performing a brute force attack. For symmetric algorithms (such as AES) a key length of 128-bits is considered to be strong. The U.S. Government requires 192 or 256-bit AES keys for top secret data. For asymmetric algorithms (such as RSA) 2048-bit length keys or their equivalents are considered strong. </li>
    <li>
      <strong>Use algorithms correctly</strong>: Make sure you're not compromising the integrity of your system by leaking key data, etc. Correctness of implementation for both algorithms and protocols is very difficult, and system libraries should always be used. </li>
    <li>
      <strong>Implement protocols correctly:</strong> Ensure that you implement cryptographic protocols as they were originally designed. Be aware that designing a new protocol from scratch is as challenging as the design of a new encryption algorithm and should only be attempted by an expert. </li>
    <li>
      <strong>Use strong GUIDs or other non-cryptographic keys:</strong> When using a non-cryptographic key, ensure that it's of sufficient length to give the desired protection against brute force attacks, given the difficulty of checking a guess for an attacker and the number of expected valid GUIDs.</li>
  </ul>
  <h1>Additional Resources</h1>
  <ul>
    <li>For more information on Brute Force Attacks, see: <a href="http://en.wikipedia.org/wiki/Brute_force_attack">http://en.wikipedia.org/wiki/Brute_force_attack</a><br /></li>
    <li>
      <a href="http://en.wikipedia.org/wiki/Brute_force_attack">
      </a>For more information on Key Size, see: <a href="http://en.wikipedia.org/wiki/Cryptographic_key_length">http://en.wikipedia.org/wiki/Cryptographic_key_length</a></li>
    <li>For more information on Wireless Attacks and Penetration Testing, see: <a href="http://www.symantec.com/connect/articles/wireless-attacks-and-penetration-testing-part-1-3">http://www.symantec.com/connect/articles/wireless-attacks-and-penetration-testing-part-1-3</a><br /></li>
  </ul>
  <h1>Related Items</h1>
  <ul>
    <li>
      <a href="/article/29e3d723-354f-4d82-ac7b-b004dc759c2f">Attack: Chosen Plaintext Attack</a>
    </li>
    <li>
      <a href="/article/340f0d7d-6226-4948-9934-84a07b3064bf">Attack: Chosen Ciphertext Attack</a>
    </li>
    <li>
      <a href="/article/b0ac82e3-fe0d-4581-85bd-48ff3fd9fb19">Attack: Weak Password Attack</a>
    </li>
    <li>
      <a href="/article/d72d0706-99df-4a65-a19d-6a83ec868a7b">Attack: Credentials Brute Force Attack</a>
    </li>
    <li>
      <a href="/article/ed64300c-6963-4f9d-b3db-6e65acc8c481">Attack: Timing Analysis Attack</a>
    </li>
    <li>
      <a href="/article/72891dcd-2330-4615-a22a-855a02394277">Attack: Statistical Analysis Attack</a>
    </li>
    <li>
      <a href="/article/ac219c42-ec7a-4a01-be18-d0a76bd66018">Attack: Session Prediction Attack</a>
    </li>
    <li>
      <a href="/article/cd4ccbbb-be9c-4ff4-8b20-d116819b634b">Guideline: Use a Secure Key Storage Location </a>
    </li>
    <li>
      <a href="/article/b070122f-f1d1-47da-a378-57f845d5db61">Guideline: Encrypt Communication Links </a>
    </li>
    <li>
      <a href="/article/51b6776e-c771-4d63-b77d-b16ba295a62f">Guideline: Encrypt Sensitive Data in the Database </a>
    </li>
  </ul>]]></Data>
  </Content>
</TeamMentor_Article>