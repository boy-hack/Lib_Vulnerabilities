<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="1024187207" Content_Hash="-1975763084">
  <Metadata>
    <Id>d00e43b2-f820-4668-8174-07045c4874be</Id>
    <Id_History>e8b05112-2416-436a-9679-07d9e5626bca,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6204f2d47eb7</Library_Id>
    <Title>Credentials Dictionary Attack</Title>
    <Category>Sensitive Data</Category>
    <Phase>Design</Phase>
    <Technology> Any</Technology>
    <Type>Attack</Type>
    <DirectLink>Credentials Dictionary Attack</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>2</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="wikitext">
    <Data><![CDATA[=Applies To

Any application that uses credentials.
=Description

A dictionary attack is a technique for defeating weak authentication credentials using a pre-compiled list of common usernames and passwords. It relies on the fact that users tend to use weak passwords that can be easily remembered. Although similar to Brute-Force Attack, this technique performs faster as it exhausts only the common possibilities. The input set in a Dictionary Attack is limited only to words that could be derived from a dictionary; therefore the name of the attack.

If the attacker has a large amount of time available and the application is not denying login attempts after a certain number of attempts the attacker may script login attempts using large lists of usernames and passwords. Username lists and common password lists are freely available from many websites.
=Impact

    *Credential compromise

=Vulnerabilities

    *Weak password policy

=Countermeasures

    *Enforce strong passwords: Applications should enforce strong passwords that would require users to construct their passwords using a larger input set. *An example for stronger password requirements is:
        **At least 8 characters long.
        **Contains lower case letters, upper case letters, and numbers.
        **The password is regularly changed by the user, e.g. once every 3 months.

=Additional Resources

    *For more information on Testing for Brute Force attacks, see: http://www.owasp.org/index.php/Testing_for_Brute_Force

=Related Items

    *[[Attack: Account Lockout Attack]]
    *[[Attack: Credentials Brute Force Attack]]
    *[[Attack: Weak Password Attack]]
    *Guideline: Enforce Strong Passwords
    *Guideline: Consider Using JAAS for Authentication
    *Guideline: Use Windows Authentication for Web Users if Possible (Windows Authentication)
    *Guideline: Consider Using Two Factor Authentication
    *Guideline: Do Not Store Passwords
    *Guideline: Enforce Strong SQL Passwords
    *Guideline: Force Password Renewal
    *Guideline: Limit Access to the Credential Store
    *Guideline: Secure Connection Strings
    *Guideline: Store Passwords Securely

]]></Data>
  </Content>
</TeamMentor_Article>