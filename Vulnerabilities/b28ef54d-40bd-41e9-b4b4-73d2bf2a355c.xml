<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>b28ef54d-40bd-41e9-b4b4-73d2bf2a355c</Id>
    <Id_History>00000000-0000-0000-0000-0000008aa974,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6204f2d47eb7</Library_Id>
    <Title>Hard-coded Credentials</Title>
    <Category>Authentication</Category>
    <Phase>Implementation</Phase>
    <Technology>ASP.NET 4.0</Technology>
    <Type>Vulnerability</Type>
    <DirectLink>Hard-coded Credentials</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[==Description==

Applications that use authentication need a method for storing credentials. Credentials may be stored for authenticating users to the application or for the application to authenticate to external services. One of the simplest ways to store the credentials is to hard-code them into the application. This approach is not secure, because anyone with access to the application code is able to recover these credentials. Once an attacker has recovered the credentials, he can use them to authenticate with the application or to access the external services. To prevent this vulnerability, provide a secure admin interface that allows changing credentials and store credentials securely. To check for this vulnerability, examine all code that uses authentication and find where it stores credentials.

==Impact==

Once the attacker has the database access credentials, he may be able to connect to the database and execute arbitrary queries. The privileges granted to the attacker will be based on the access level of the credentials. Typically, the attacker is then able to retrieve any data in the database, modify any data in the database, delete any data in the database or modify database structure. Having this level of control over the database usually allows the attacker to take full control of the application. If the attacker is able to leverage additional vulnerabilities or the servers are not configured securely, the attacker may also take full control of the application server and the database server.

==Countermeasures==

Provide a secure administrative interface that allows changing credentials:

* [[00000000-0000-0000-0000-000000066326|Provide a Secure Administrative Interface that Allows Changing Passwords]]

Store credentials securely:
* [[00000000-0000-0000-0000-0000006adfa3|Store Passwords Securely]]

==Checklists==

A secure administrative interface allows changing credentials:
* [[00000000-0000-0000-0000-0000006dd207|A Secure Administrative Interface that Allows Changing Passwords Is Provided]]

Credentials are stored securely:

* [[00000000-0000-0000-0000-00000077a50c|Passwords Are Stored Securely]]

]]></Data>
  </Content>
</TeamMentor_Article>