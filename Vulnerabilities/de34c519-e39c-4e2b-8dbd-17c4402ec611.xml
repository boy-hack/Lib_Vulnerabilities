<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>de34c519-e39c-4e2b-8dbd-17c4402ec611</Id>
    <Id_History>00000000-0000-0000-0000-0000002f9f56,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6204f2d47eb7</Library_Id>
    <Title>Command Execution</Title>
    <Category>Dangerous APIs</Category>
    <Phase>Implementation</Phase>
    <Technology>ASP.NET 4.0</Technology>
    <Type>Vulnerability</Type>
    <DirectLink>Command Execution</DirectLink>
  </Metadata>
  <Content Sanitized="false" DataType="WikiText">
    <Data><![CDATA[=Description

Command injection (command execution) is a type of vulnerability that allows an attacker to execute arbitrary code or external processes by injecting control information into the data stream.

=Countermeasures

To prevent this vulnerability, validate all input.

Validate all input:

* [[3de41277-0cc1-4ebc-8dd7-e96d161aa0ef|Validate All Input]]
* [[e59923e7-c2fb-4a75-8db7-a9a91e869f74|Validate Input for Length, Range, Format, And Type]]

=Application Check

To check for adequate protection against this vulnerability, ensure that all input is validated.

All input is validated:

* [[a210fcb7-f142-4c2e-844a-c43e0859f90d|All Input Is Validated]]
* [[0e71dd64-87d1-4cf5-9569-ea320f209977|Input Is Validated for Length, Range, Format, And Type]]

=Additional Resources

* For more information about command injection, please see https://www.owasp.org/index.php/Command_Injection ]]></Data>
  </Content>
</TeamMentor_Article>