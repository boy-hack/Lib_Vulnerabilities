<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>1fd3358c-722f-4e61-899f-26b7818b940c</Id>
    <Id_History>00000000-0000-0000-0000-00000065bf7d,</Id_History>
    <Library_Id>26bd1a04-beed-4a66-917d-b6ab0a7d634c</Library_Id>
    <Title>Cross-Site History Manipulation</Title>
    <Category>Session Management</Category>
    <Phase>Implementation</Phase>
    <Technology>ASP.NET 4.0</Technology>
    <Type>Landing Page</Type>
    <DirectLink>Cross-Site History Manipulation</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[==Description==

Cross-Site History Manipulation (XSHM) occurs when a malicious site is able to use JavaScript to access information about the user's browsing history on the vulnerable site. This results in leaking information from the users session with the site of interest, such as: detecting users login state, mapping of internal site resources, detecting errors, and inferring certain sensitive information. XSHM allows the attacker to find out whether a user has visited the site vulnerable to XSHM, but only if the user visits an attacker-controlled site. XSHM is really a browser vulnerability, but it is possible to protect against it on the server-side. To protect against XSHM, include unique tokens in redirects. To verify that adequate protection is in place against XSHM, check if uniquie tokens are included in redirects.

==Impact==

The impact of Cross-Site History Manipulation is that an attacker may gain information about the user's web browsing history. XSHM only allows finding out whether the user has been to a specific URL or not - XSHM does not allow reading the actual browsing history. The hypothetical impact of successful exploitation of the vulnerability includes user privacy violation, login status detection, resources mapping, sensitive information inferring, usersâ€™ activity tracking and URL parameter stealing. However, the likelihood of this vulnerability being exploited to this extent is low. Although, the vulnerability can possibly be combined with XSS and CSRF to achieve greater impact. 

==Countermeasures==

Add unique tokens to redirects:

* [[00000000-0000-0000-0000-0000003fde13|Include Unique Tokens in Redirects]]

==Checklists==

Unique tokens are added to redirects:

* [[00000000-0000-0000-0000-0000007b3c6e|Unique Tokens Are Included in Redirects]]


==Additional Resources==

https://www.owasp.org/index.php/Cross_Site_History_Manipulation_%28XSHM%29 ]]></Data>
  </Content>
</TeamMentor_Article>